name: SecurityChecks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  Semgrep-Scan:
    runs-on: ubuntu-latest

    container:
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4

      - name: Run semgrep on the repo
        run: |
          semgrep scan --severity=ERROR --error --config "p/default" --metrics=off --no-autofix --sarif --sarif-output=findings.sarif

      - name: Check if SARIF file exists
        if: always()
        run: |
          if [[ -f "findings.sarif" ]]; then
            echo "sarif_exists=true" >> $GITHUB_ENV
          else
            echo "sarif_exists=false" >> $GITHUB_ENV
          fi

      - name: Upload Artifact
        if: always() && env.sarif_exists == 'true'  # Check if SARIF exists before uploading
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-scan-results
          path: findings.sarif

      # - name: Upload SARIF file for GitHub Advanced Security Dashboard
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: findings.sarif
      #   if: always()

      # - name: Fail Job if Semgrep Fails
      #   if: failure()  # Fail the job if semgrep encountered an error
      #   run: exit 1

  Trivy-Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'


      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-results
          path: trivy-results.sarif

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: 'trivy-results.sarif'

  Trufflehog-Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for Secrets
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --only-verified --json 